upstream web-service {
  server unix:///home/webservice/web-service/tmp/sockets/web-service.sock;
}

server {
  listen 80;
  server_name www.web-service.locatemystickers.com web-service.locatemystickers.com;

  keepalive_timeout 5;

  root /home/webservice/web-service/public;

  access_log /var/log/nginx/web-service-nginx.access.log;
  error_log /var/log/nginx/web-service-nginx.error.log info;

  if (-f $document_root/maintenance.html) {
    rewrite  ^(.*)$  /maintenance.html last;
    break;
  }

  location ~ ^/(assets)/  {
    root /home/webservice/web-service/public;
    expires max;
    add_header  Cache-Control public;
  }

  location / {
    proxy_read_timeout 6000;
    proxy_connect_timeout 6000;
    proxy_redirect     off;

    #client_max_body_size 4M;


    #sendfile on;
    #send_timeout 300s;

    proxy_set_header   X-Forwarded-Proto $scheme;
    proxy_set_header   Host              $http_host;
    proxy_set_header   X-Real-IP         $remote_addr;

      proxy_pass http://web-service;
}

  # Now this supposedly should work as it gets the filenames 
  # with querystrings that Rails provides.
  # BUT there's a chance it could break the ajax calls.
  location ~* \.(ico|css|gif|jpe?g|png)(\?[0-9]+)?$ {
     expires max;
     break;
  }

  location ~ ^/javascripts/.*\.js(\?[0-9]+)?$ {
     expires max;
     break;
  }

  # Error pages
  # error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /home/webservice/web-service/public;
  }
}